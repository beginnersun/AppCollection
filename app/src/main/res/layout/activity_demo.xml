<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="model"
            type="com.example.myboy.appcollection.demo.activity.main.MainViewModel"/>
    </data>
<!-- 因为要存在抽屉 所以根布局必须是DrawerLayout -->
    <androidx.drawerlayout.widget.DrawerLayout
        android:id="@+id/drawer_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!--DrawerLayout 第一个永远是内容布局   然后第二个此时NavigationView  -->
        <FrameLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">
            <!--因为要对ActionBar做自定义 所以需要有APpBarLayout  但是为了能在头部局中添加固定的Layout必须头条中 在TabLayout上面还有一些布局 这个TabLayout就可以放在CoordinatorLayout中
            这样AppBar滑动了 这个组件会留在最顶部      在AppBarLayout 添加头布局的内容 然后设置跟着下方内容的滑动而滑动-->
            <androidx.coordinatorlayout.widget.CoordinatorLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent">
                <com.google.android.material.appbar.AppBarLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">

                    <!--scrollFlags 其中如果要实现滑动  scroll是必须有的  其他的代表滑动的方式和滑动后的状态-->
                    <com.google.android.material.appbar.CollapsingToolbarLayout
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
                        app:layout_scrollFlags="scroll|exitUntilCollapsed">
                        <ImageView
                            android:layout_width="match_parent"
                            android:layout_height="match_parent"
                            android:scaleType="centerCrop"
                            android:src="@mipmap/bg"
                            app:layout_collapseMode="parallax" />

                        <!--app:layout_collapseMode="parallax" 或者为pin  增加折叠模式属性  parallax 会让toolbar的图标消失但依旧占位  pin不会-->
                        <androidx.appcompat.widget.Toolbar
                            android:id="@+id/toolbar"
                            android:layout_width="match_parent"
                            android:layout_height="?actionBarSize"
                            app:layout_collapseMode="pin"
                            app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
                            app:title="Title"/>

                    </com.google.android.material.appbar.CollapsingToolbarLayout>

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="?actionBarSize"
                        android:background="@color/white"
                        android:orientation="vertical">

                        <com.google.android.material.tabs.TabLayout
                            android:id="@+id/tablayout"
                            android:layout_width="match_parent"
                            android:layout_height="match_parent"
                            app:tabIndicatorColor="#0BABFE"
                            app:tabMode="fixed"
                            app:tabSelectedTextColor="#0BABFE"
                            app:tabTextColor="@color/black_item">

                            <com.google.android.material.tabs.TabItem
                                android:layout_width="wrap_content"
                                android:layout_height="match_parent"
                                android:text="第一个" />

                            <com.google.android.material.tabs.TabItem
                                android:layout_width="wrap_content"
                                android:layout_height="match_parent"
                                android:text="第二个" />

                        </com.google.android.material.tabs.TabLayout>

                    </LinearLayout>


                </com.google.android.material.appbar.AppBarLayout>

                <!--作为Coordinator 的内容布局 需要添加属性 app:layout_behavior="@string/appbar_scrolling_view_behavior" 意思是让头顶的appbar能响应滑动事件，并做相应的改变-->

                <androidx.viewpager.widget.ViewPager
                    android:id="@+id/viewpager"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    app:layout_behavior="@string/appbar_scrolling_view_behavior"/>

                <androidx.core.widget.NestedScrollView
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:visibility="gone"
                    app:layout_behavior="@string/appbar_scrolling_view_behavior">

                    <LinearLayout
                        android:layout_width="match_parent"
                        android:layout_height="?actionBarSize"
                        android:background="@color/white"
                        android:orientation="vertical">

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="@{model.liveData.username}"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>


                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>
                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>


                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>
                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>
                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@color/colorPrimary"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>

                        <TextView
                            android:layout_width="match_parent"
                            android:layout_height="40dp"
                            android:text="1"
                            android:background="@android:color/holo_red_dark"
                            android:gravity="center"
                            android:layout_marginTop="20dp"
                            android:textColor="@color/white"/>
                    </LinearLayout>

                </androidx.core.widget.NestedScrollView>

            </androidx.coordinatorlayout.widget.CoordinatorLayout>

        </FrameLayout>

        <!-- 第二个才是NavigationView  layout_gravity代表从哪里打开抽屉  left，start代表从左边 反之从右边 但是left和right 尽量不用
        app:headerLayout 是抽屉布局  如果需要获取对应抽屉布局的根View  需要在代码中调用navigationView.getHeaderView(0) 获取对应的根VIew然后再获取子view
        赋值    app:memu 是添加菜单项
        -->
        <com.google.android.material.navigation.NavigationView
            android:id="@+id/navigation"
            android:layout_width="250dp"
            android:layout_height="match_parent"
            android:fitsSystemWindows="true"
            android:layout_gravity="start"
            app:headerLayout="@layout/navigation_header"
            app:menu="@menu/nav_ment_item"
            android:background="@color/white"
            app:itemTextColor="@color/black"
            app:insetForeground="@color/black"/>

    </androidx.drawerlayout.widget.DrawerLayout>


</layout>